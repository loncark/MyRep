Želimo da ovo iskoristite kao daljnje uèenje i razvoj u podruèju game developmenta. Iz tog razloga u nastavku šaljem neke primjedbe našeg lead programera za rješenja zadatka:

Zadatak nije implementiran prema specifikaciji. Ideja je bila da se leveli i sve pripadajuæe cigle definiraju vanjskom datotekom (ili po želji više njih) tako da se leveli i cigle mogu definirati bez ponovnog prevoðenja koda. Dodatna pogodnost ovakve izvedbe je da bi recimo level dizajner mogao raditi na levelima nezavisno o programeru.
Brzina izvoðenja igre ovisi o brzini raèunala. Zbog toga je brzina kretanja loptice i splava nekonzistentna od raèunala do raèunala.
Neki resursi se svaki frame uèitavaju s diska umjesto da postoji resource manager koji se brine da se resursi uèitavaju i èiste po potrebi.
Kod nekih klasa postoji problem održavanja konzistentnosti stanja objekta. Npr. dva uzastopna poziva BrickType::loadTexture æe prouzroèiti memory leakove.
Nije preporuèljivo direktno pozivati destruktor.
Nije preporuèljivo koristiti static za lokalne varijable. Pogotovo ne za one varijable koje je jako jeftino alocirati (float, SDL_Rect). Varijabla se u tom sluèaju ne može alocirati na stacku što znaèi da je memory access na takvu varijablu bitno sporiji nego da je ona "u okolini" tj. na stacku. Dodatno, multithreading je puno teže izvesti u tom sluèaju.
Igra ima puno hardkodiranih konstanti.
Using namespace se koristi u header datoteci.
Const-correctness je nepostojeæi.
Jezik i formatiranje koda su nekonzistentni. Predlažem iskljuèivo engleski i za kod i za komentare i za nazive datoteka/direktorija.